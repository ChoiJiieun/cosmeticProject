<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="comm.proj.my.community.dao.IBoardDAO">
	
	<!-- 게시물 카테고리 조회 -->
	<select id="noticeCategory" resultType="CommVO">
		SELECT * FROM boards_category
	</select>
	
	<!-- 게시물 작성 -->
	<insert id="insertBoard" parameterType="BoardVO">
		INSERT INTO boards(bo_no, bo_title, bo_category, bo_writer, bo_content)
		VALUES(BOARD_SEQ.NEXTVAL, #{boTitle}, #{boCategory}, #{boWriter}, #{boContent})
	</insert>
	
    <!-- 전체 게시물 수 조회 -->
    <select id="getTotalRowCount" resultType="int">
        SELECT COUNT(*) FROM boards
    </select>

    <!-- 게시물 목록 조회 (페이징 처리) -->
    <select id="getBoardList" parameterType="PagingVO" resultType="BoardVO">
		SELECT *
		FROM (
		        SELECT a.*, ROWNUM as rnum
		        FROM (
	                SELECT bo_no, bo_title, bc.cd_name as bo_category, nvl(m.mem_nickname, m.mem_nm) as bo_writer, bo_content, bo_hit, TO_CHAR(bo_reg_date , 'YYYY-MM-DD') as bo_reg_date, m.profile_img
	                FROM boards b, members m, boards_category bc
	                WHERE b.bo_category = bc.cd_id
	                 AND  b.bo_writer = m.mem_id
	                ORDER BY bo_no DESC
		        ) a
		     ) b
		WHERE rnum BETWEEN #{firstRow} AND #{lastRow}
    </select>
    
	<!-- 조회수 업데이트 -->
	<update id="increaseHit" parameterType="int">
		UPDATE boards
		SET bo_hit = bo_hit + 1
		WHERE bo_no = #{boNo}
	</update>
	
	<!-- 게시물 상세 조회 -->
	<select id="getBoard" resultType="BoardVO" parameterType="int">
		SELECT bo_no, bo_title, bc.cd_name as bo_category, nvl(m.mem_nickname, m.mem_nm) as bo_writer, m.mem_id, bo_content, bo_hit, bo_reg_date
		FROM boards b, members m, boards_category bc
		WHERE b.bo_category = bc.cd_id
		 AND  b.bo_writer = m.mem_id
		 AND  b.bo_no = #{boNo}
	</select>
	
	<!-- 게시물 수정 -->
	<update id="updateBoard" parameterType="BoardVO">
		UPDATE boards
		SET bo_title = #{boTitle}, bo_category = #{boCategory}, bo_content = #{boContent}
		WHERE bo_no = #{boNo}
	</update>
	
	<!-- 게시물 삭제 -->
	<delete id="delBoard" parameterType="int">
	DELETE FROM boards
	WHERE bo_no = 130
	</delete>
	
	<!-- 댓글 작성 -->
	<insert id="insertReply" parameterType="ReplyVO">
		INSERT INTO replys(bo_no, reply_no, mem_id, reply_content)
		VALUES(#{boNo}, SEQ_REPLY.NEXTVAL, #{memId}, #{replyContent})
	</insert>
	
	<!-- 게시물 별 댓글 조회 -->
	<select id="replyInfo" parameterType="int" resultType="ReplyVO">
		SELECT r.bo_no, r.reply_no, r.mem_id, nvl(m.mem_nickname, mem_nm) as mem_nickname, m.profile_img, r.reply_content, TO_CHAR(r.reply_date, 'yyyy.MM.dd. HH24:mm') as reply_date
		FROM replys r, members m
		WHERE r.mem_id = m.mem_id
		 AND  r.bo_no = #{boNo}
	</select>

</mapper>